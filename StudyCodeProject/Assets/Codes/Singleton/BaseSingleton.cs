/**---------------------------------------------------------------------------------
 * @file BaseSingleton.cs
 * @date 2022/7/13
 * @author sejong
 * @brief 싱글턴 베이스 클레스, 실제 사용은 상속 받아서 사용한다.
 *///-------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace BaseSingleton
{

	/// <summary>
	/// @class BaseSingleton
	/// @date 2022/7/13
	/// @author sejong
	/// @brief 싱글턴 베이스 클레스, 실제 사용은 상속 받아서 사용한다.
	/// Lazy<T>는 초기화를 지연시켜서 접근하려고 하면 그때 객체를 생성하는 클래스로,
	/// 멀티 스레드에서도 안전하기 때문에 lock 대신 사용할 수 있다.
	/// </summary>
	public abstract class BaseSingleton<T> where T : class, IBaseSingleton, new()
	{
		//@@-------------------------------------------------------------------------------------------------------------------------
		//@@-------------------------------------------------------------------------------------------------------------------------

		protected static readonly Lazy<T> _instance = new Lazy<T>( CreateSingleton );

		public static T INSTANCE
		{
			get
			{
				return _instance.Value;
			}
		}

		//@@-------------------------------------------------------------------------------------------------------------------------
		//@@-------------------------------------------------------------------------------------------------------------------------

		/// <summary>
		/// 생성 함수 변경의 여지가 없다.
		/// </summary>
		/// <returns></returns>
		protected static T CreateSingleton()
		{
			T instance = new();

			instance.Initialize();

			return instance;
		}

		//@@-------------------------------------------------------------------------------------------------------------------------
		
		/// <summary>
		/// 싱글턴 초기화
		/// </summary>
		public static void Reset()
		{
			if( null != _instance )
				_instance.Value.Release();
		}
		
		//@@-------------------------------------------------------------------------------------------------------------------------
		//@@-------------------------------------------------------------------------------------------------------------------------

	}//BaseSingleton

	public interface IBaseSingleton
	{
		//@@-------------------------------------------------------------------------------------------------------------------------
		//@@-------------------------------------------------------------------------------------------------------------------------

		/// <summary>
		/// 초기화 함수 입니다.
		/// 할당 될때 한번 호출됩니다.
		/// </summary>
		void Initialize();

		/// <summary>
		/// 릴리즈 함수 입니다.
		/// </summary>
		void Release();

		//@@-------------------------------------------------------------------------------------------------------------------------
		//@@-------------------------------------------------------------------------------------------------------------------------

	}//IBaseSingleton

}//BaseSingleton